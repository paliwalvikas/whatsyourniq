# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/recaptchaenterprise/v1beta1/recaptchaenterprise.proto for package 'Google::Cloud::RecaptchaEnterprise::V1beta1'
# Original file comments:
# Copyright 2019 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#


require 'grpc'
require 'google/cloud/recaptchaenterprise/v1beta1/recaptchaenterprise_pb'

module Google
  module Cloud
    module RecaptchaEnterprise
    end
    Recaptchaenterprise = RecaptchaEnterprise unless const_defined? :Recaptchaenterprise
  end
end
module Google::Cloud::RecaptchaEnterprise::V1beta1
  module RecaptchaEnterprise
    # Service to determine the likelihood an event is legitimate.
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'google.cloud.recaptchaenterprise.v1beta1.RecaptchaEnterprise'

      # Creates an Assessment of the likelihood an event is legitimate.
      rpc :CreateAssessment, CreateAssessmentRequest, Assessment
      # Annotates a previously created Assessment to provide additional information
      # on whether the event turned out to be authentic or fradulent.
      rpc :AnnotateAssessment, AnnotateAssessmentRequest, AnnotateAssessmentResponse
      # Creates a new reCAPTCHA Enterprise key.
      rpc :CreateKey, CreateKeyRequest, Key
      # Returns the list of all keys that belong to a project.
      rpc :ListKeys, ListKeysRequest, ListKeysResponse
      # Returns the specified key.
      rpc :GetKey, GetKeyRequest, Key
      # Updates the specified key.
      rpc :UpdateKey, UpdateKeyRequest, Key
      # Deletes the specified key.
      rpc :DeleteKey, DeleteKeyRequest, Google::Protobuf::Empty
    end

    Stub = Service.rpc_stub_class
  end
end
